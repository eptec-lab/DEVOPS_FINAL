# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and deploy Node.js app to Azure Web App - DevProject

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: userapi
    

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
        redis-version: [6]

    steps:
    - uses: actions/checkout@v3
    - name: Start Redis
      uses: supercharge/redis-github-action@1.4.0
      with:
        redis-version: ${{ matrix.redis-version }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
    - run: npm ci
    - run: npm install mocha --save-dev
    - run: npm install prompt-sync 
    - run: npm run build --if-present
    - run: npm test
  
  deploy:
    # Login to Azure subscription
    
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
      
      
    steps:
      - name: 'Azure Login'
        description: 'Authenticate to Azure using OIDC and run your Az CLI or Az PowerShell based Actions or scripts. github.com/Azure/Actions'
        inputs: 
          creds:
            description: 'Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS'
            required: false
          client-id:
            description: 'ClientId of the Azure Service principal created.'
            required: false
          tenant-id:
            description: 'TenantId of the Azure Service principal created.'
            required: false
          subscription-id:
            description: 'Azure subscriptionId'
            required: false
          enable-AzPSSession: 
            description: 'Set this value to true to enable Azure PowerShell Login in addition to Az CLI login'
            required: false
            default: false
          environment:
            description: 'Name of the environment. Supported values are azurecloud, azurestack, azureusgovernment, azurechinacloud, azuregermancloud. Default being azurecloud'
            required: false
            default: azurecloud
          allow-no-subscriptions:
            description: 'Set this value to true to enable support for accessing tenants without subscriptions'
            required: false
            default: false
          audience:
            description: 'Provide audience field for access-token. Default value is api://AzureADTokenExchange' 
            required: false
            default: 'api://AzureADTokenExchange'
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
      
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          app-name: 'DevProject'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_741B4B99CF354D1290BC95EAAAFE3D42 }}
          package: .
        env: # Or as an environment variable
          creds: ${{ secrets.AZURE_CREDENTIALS }}
